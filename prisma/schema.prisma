// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username  String  @unique
  password  String
  firstname String?
  lastname  String?
  email     String?
  phone     String?
  image     String  @default("/images/user.png")
  isBlocked Boolean @default(false)
  isLocked  Boolean @default(false)
  isActive  Boolean @default(false)
  isAdmin   Boolean @default(false)

  RolesOnUser RolesOnUser[]
  Actions     Action[]

  createdProdutcs Product[] @relation("Creator")
  updatedProducts Product[] @relation("Updator")

  createdLots Lot[] @relation("Creator")
  updatedLots Lot[] @relation("Updator")

  @@map("users")
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role_name String  @unique
  note      String?
  isBlocked Boolean @default(false)
  isLocked  Boolean @default(false)

  RolesOnUser       RolesOnUser[]
  PermissionsOnRole PermissionsOnRole[]

  @@map("roles")
}

model RolesOnUser {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int

  @@unique([roleId, userId])
  @@map("roles_user")
}

model Module {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title     String  @unique
  logo      String
  link      String?
  isBlocked Boolean @default(false)
  isLocked  Boolean @default(false)

  OptionsOnModule OptionsOnModule[]

  @@map("modules")
}

model Option {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String  @unique
  description String  @default("Une option dans un module")
  isBlocked   Boolean @default(false)
  isLocked    Boolean @default(false)

  permissions     Permission[]
  OptionsOnModule OptionsOnModule[]

  @@map("options")
}

model OptionsOnModule {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  option    Option   @relation(fields: [optionId], references: [id])
  optionId  Int
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  Int

  @@unique([optionId, moduleId])
  @@map("options_module")
}

model Permission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name              String              @unique
  identifier        String              @unique
  isBlocked         Boolean             @default(false)
  isLocked          Boolean             @default(false)
  order             Int
  description       String              @default("En selectionant cette permission vous allez accordez ce droit Ã  cet utilisateur")
  option            Option              @relation(fields: [optionId], references: [id])
  optionId          Int
  PermissionsOnRole PermissionsOnRole[]

  @@map("permissions")
}

model PermissionsOnRole {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@unique([roleId, permissionId])
  @@map("role_pemisisons")
}

model Action {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  @@map("actions")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String  @unique
  description String?
  isBlocked   Boolean @default(false)
  isLocked    Boolean @default(false)

  parentId Int?
  parent   Category?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children Category[] @relation("CategoryChildren")
  products Product[]

    @@map("categories")

}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reference        String
  designation      String
  description      String  @default("")
  theoStock        Float   @default(0)
  physStock        Float   @default(0)
  criticalQuantity Float   @default(0)
  minQuantity      Float   @default(0)
  isActive         Boolean @default(true)
  isExposed        Boolean @default(false)
  isExclusive      Boolean @default(false)
  maxPrice         Float?  
  minPrice         Float?   
  isBlocked        Boolean @default(false)
  isLocked         Boolean @default(false)

  createdBy User? @relation("Creator", fields: [creatorId], references: [id])
  creatorId Int?

  updatedBy User? @relation("Updator", fields: [updaterId], references: [id])
  updaterId Int?

  unit   Unit @relation(fields: [unitId], references: [id])
  unitId Int

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  lots Lot[]

  @@map("products")
}

model Unit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Symbol      String
  description String? @default("")
  isBlocked   Boolean @default(false)
  isLocked    Boolean @default(false)

  convertionCoefficient Int       @default(1)
  products              Product[]

  @@map("units")
}

model Lot {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  number           String
  unitCost         Float?
  note             String @default("")
  theoStock        Float  @default(0)
  physStock        Float  @default(0)
  criticalQuantity Float  @default(0)
  minQuantity      Float  @default(0)
  isActive         Boolean @default(true)
  maxPrice         Float   @default(0)
  minPrice         Float   @default(0)
  isBlocked        Boolean @default(false)
  isLocked         Boolean @default(false)

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  createdBy User? @relation("Creator", fields: [creatorId], references: [id])
  creatorId Int?

  updatedBy User? @relation("Updator", fields: [updaterId], references: [id])
  updaterId Int?

  @@map("lots")
}

model Depot {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String  @unique
  code        String  @unique
  description String  @default("")
  isBlocked   Boolean @default(false)
  isLocked    Boolean @default(false)

  @@map("depots")
}
